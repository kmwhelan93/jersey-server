/**
 * This class is generated by jOOQ
 */
package jooq.generated.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.0"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BasesRecord extends org.jooq.impl.UpdatableRecordImpl<jooq.generated.tables.records.BasesRecord> implements org.jooq.Record2<java.lang.Integer, java.lang.Integer> {

	private static final long serialVersionUID = 2086495848;

	/**
	 * Setter for <code>maimon.bases.base_id</code>.
	 */
	public void setBaseId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>maimon.bases.base_id</code>.
	 */
	public java.lang.Integer getBaseId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>maimon.bases.prod_rate</code>.
	 */
	public void setProdRate(java.lang.Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>maimon.bases.prod_rate</code>.
	 */
	public java.lang.Integer getProdRate() {
		return (java.lang.Integer) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row2<java.lang.Integer, java.lang.Integer> fieldsRow() {
		return (org.jooq.Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row2<java.lang.Integer, java.lang.Integer> valuesRow() {
		return (org.jooq.Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return jooq.generated.tables.Bases.BASES.BASE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field2() {
		return jooq.generated.tables.Bases.BASES.PROD_RATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getBaseId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value2() {
		return getProdRate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BasesRecord value1(java.lang.Integer value) {
		setBaseId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BasesRecord value2(java.lang.Integer value) {
		setProdRate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BasesRecord values(java.lang.Integer value1, java.lang.Integer value2) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached BasesRecord
	 */
	public BasesRecord() {
		super(jooq.generated.tables.Bases.BASES);
	}

	/**
	 * Create a detached, initialised BasesRecord
	 */
	public BasesRecord(java.lang.Integer baseId, java.lang.Integer prodRate) {
		super(jooq.generated.tables.Bases.BASES);

		setValue(0, baseId);
		setValue(1, prodRate);
	}
}
